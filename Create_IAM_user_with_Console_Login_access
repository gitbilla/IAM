# Get IAM User Name
# Do you want to Provide Programmatic Access or COnsole Access or Both
# Policy to attach
import boto3
import sys
from random import choice

def get_iam_client_object():
    session = boto3.session.Session(profile_name="augie-admin")
    iam_client = session.client(service_name="iam", region_name="ap-south-1")
    return iam_client
def get_random_password():
    len_of_password = 10
    valid_char_for_password = "abcdefghijklmnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()>?"
    return "".join(choice(valid_char_for_password) for each_cha in range(len_of_password))

def main():
    iam_client=get_iam_client_object()
    IAM_user_name="augustine"
    password=get_random_password()
    PolicyArn="arn:aws:iam::aws:policy/AdministratorAccess"
    try:
        iam_client.create_user(UserName=IAM_user_name)
    except Exception as e:
        if e.response['Error']['Code']=="EntityAlreadyExists":
            print("Already iam user with {} is exists".format(IAM_user_name))
            sys.exit(0)
        else:
            print("Please verify the error and re-try")
            print(e)
            sys.exit(0)
    iam_client.create_login_profile(UserName=IAM_user_name,Password=password,PasswordResetRequired=False)
    iam_client.attach_user_policy(UserName=IAM_user_name,PolicyArn=PolicyArn)
    print("Iam UserName={} and Password={}".format(IAM_user_name,password))
    return None


if __name__ == '__main__':
    main()
